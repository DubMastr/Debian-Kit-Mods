#!/bin/bash
PATH=/bin:/usr/bin:/usr/local/bin ; export PATH 
umask 022
OTG_nameScript=ARM_USB_OTG
# auto variables
 : ${USER?} ${HOME?} 
# find the name of this script and store it to a variable
OTG_fullScriptPath="$(readlink -f $0)"
# deleat last componit from ThisScript and store to another variable
OTG_ScriptDirectory="$(dirname $OTG_fullScriptPath)"

fUUIDs=`blkid | grep -E 'UUID' | awk '{gsub("UUID=\"","");print $2}'`
fBatteryTemp=`dmesg | grep -E 'BATT' | awk '{gsub("Temp:""","");print $7}' | sed 's/.$//' | tail -1`
fUSB=`dmesg | grep -E 'usb' | grep -v 'off'`

# web addresses
# http://forums.debian.net/viewtopic.php?f=10&t=104774
# http://android.stackexchange.com/questions/11546/android-chroot-ubuntu-is-it-possible-to-get-ubuntu-to-recognise-usb-devices
# http://www.mysolutions.it/mounting-android-sd-card-ubuntu/
# http://blog.spiderlabs.com/2012/12/proxmark-3-now-with-100-more-android.html
# functions
install_PackageDepends () { 
	echo "Tested under Debian Squeeze ARMel without package list modification"
	echo Installing USB utilities..."
	apt-get -q install usbutils usbview
	echo "Installing libusb and dev packages..."
	apt-get -q install libusb-1.0-0-dev libusb-1.0-0 libusb-0.1-4 libusb-dev
	echo "Installing usb programming packages..."
	apt-get -q install libusbprog-dev libusbprog0
	echo "Installing libusb conectivity packages..."
	apt-get -q install libusbip-dev libusbip0
	echo "Installing libs for FTDI USB controllers..."
	apt-get -q install libftdi1 libftdipp1
	echo "Installing OCaml libs for USB..."
	apt-get -q install libusb-ocaml-dev libusb-ocaml
	echo "Installing ruby and C++ and Java USB libs..."
	apt-get -q install libusb-ruby libusb++-0.1-4c2 libusb++-dev libusb-java libusb-java-dbg libusb-java-lib
	echo "Installing a few extras for WiFi and Apple touch devices connected by USB..."
	apt-get -q install spectools libusbmuxd-dev libusbmuxd1
}

readOut_USBInfo () { 
	echo "_______________________"
	echo "Reading out USB info from the : blkid : command and displaying UUIDs..."
	$fUUIDs
	echo "_______________________" && sleep 5
	echo "Reading out USB info from the : dmesg : command and displaying only USB info..."
	$fUSB
	echo "_______________________" && sleep 5
	echo "Reading out battery temp from the : dmesg : command and displaying only temprature info..."
	$fUSB
} 
ui_variablePrompts () { 
	echo -n "What UUID do you wish to mount? : "
	read ui_UUID
	
} 


echo "End of script, exiting now..."
exit
# examples

## add the following to : /etc/udev/rules.d/51-android.rules : with modifications
# SUBSYSTEM=="usb", SYSFS{idVendor}=="<your vendor's four character id>", MODE="0666"
## then fix permissions and restart service
# chmod a+rx /etc/udev/rules.d/51-android.rules
# restart udev

## the following paths are where I found USB
# dev/usb

## paths that where sugested by the forth link
# $bbox mount -o bind /dev $mnt/dev 
# $bbox mount -o bind /sys $mnt/sys 
# $bbox mount -o bind /system $mnt/system

## the : links.conf : file under : etc/udev/ : states the following when debian is mounted with Debian Kit app:
# This file does not exist. Please do not ask the Debian maintainer about it.
# If you need manually created devices, create them in /lib/udev/devices/ .
## note line two states to create new devices under : /lib/udev/devices/ : however this directory by default does not exsist
##+ so under root linux user : mkdir -p /lib/udev/devices : and direct mount points there...



