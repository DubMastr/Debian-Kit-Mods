#!/bin/bash
PATH=/bin:/usr/bin:/usr/local/bin ; export PATH 
umask 022 		# Files that the script creates will have 755 permission.
# Thanks to Ian D. Allen, for this tip.
# variables auto
 : ${USER?} ${HOME?} 
# find the name of this script and store it to a variable
osCN_fullScriptPath="$(readlink -f $0)"
# deleat last componit from ThisScript and store to another variable
osCN_ScriptDirectory="$(dirname $osCN_fullScriptPath)"

IP_inet_addr=`/sbin/ifconfig | grep -E 'inet addr' | grep -v '127.0.0.1' | awk '{gsub("addr:",""); print $2}'`
IP_Bcast_addr=`/sbin/ifconfig | grep -E 'Bcast' | grep -v '127.0.0.1' | awk '{gsub("Bcast:",""); print $3}'`
IP_Mask_addr=`/sbin/ifconfig | grep -E 'Mask' | grep -v '127.0.0.1' | awk '{gsub("Mask:",""); print $4}'`
IP_inet6_addr=`/sbin/ifconfig | grep -E 'inet6 addr' | grep -v '127.0.0.1' | grep -v '1/128' | awk '{gsub("addr:",""); print $2}'`
IP_local=`/sbin/ifconfig | grep -E 'inet addr' | grep -E '127.0.0.1' | awk '{gsub("addr:",""); print $2}'`

trimIP=`$IP_Bcast_addr | sed 's/...$//'`
trimRoute=`route -n | grep -E 'UG' | awk '{print $2}'`
IPmin=1
IPmax=254
customPinger=`for ip in $(seq $IPmin $IPmax) ;do (ping -c 1 -w 5 $trimIP$ip >/dev/null && echo "$trimIP$ip" &) ; done`
fLive_IPs=`$customPinger | grep -v '$trimRoute' | grep -v '$IP_inet_addr'`


# variables user set

# package list
# openstack-utils openstack-keystone mysql-server

# Start of functions for script
#+ Write a function to display at start of running script
part00_readme () { 
	echo "_________00.1"
	echo "This script was made posible thanks to the following two links..."
	echo "http://docs.openstack.org/havana/install-guide/install/apt-debian/content/"
	echo "http://blog.adityapatawari.com/2014/01/openstack-101-how-to-setup-openstack.html"
	echo "	This script is desined to run on ARM Linux OS's wheeze on up."
	echo "Use it to install and configure Keystone properly"
	echo "_________00.2"
} 
part01_installPackages () { 
	echo "_________01.1"
	apt-get install openstack-utils
	apt-get install openstack-keystone
	apt-get install mysql-server
	echo "_________01.2"
} 
part02_configKeystone () { 
	echo "_________02.1"
	echo "Opening : /etc/keystone/keystone.conf : with vim so you can edit that file so it looks like bellow example"
	echo "_________02.2"
	echo "[DEFAULT]"
	echo "admin_token = ADMIN_TOKEN"
	echo "."
	echo "."
	echo "."
	echo "[sql]"
	echo "connection = mysql://keystone:KEYSTONE_DBPASS@controller/keystone"
	echo "Note that ADMIN_TOKEN and KEYSTONE_DBPASS should be long and difficult to guess."
	echo "	Remember that ADMIN_TOKEN is the almighty token which will have full access to create and destroy users and services."
	echo "_________02.3"
	echo "	to exit from vi/vim saving changes, press [Esc], : (colon) and type wq."
	vim /etc/keystone/keystone.conf
	echo "_________02.4"
} 
part03_configMySQL () { 
	echo "_________03.1"
	echo "About to run : mysql_secure_installation : which is only required for the first run of MySQL"
	echo "	This will ask you to set root password."
	mysql_secure_installation
	echo "_________03.2"
	echo "Now we need to create the required database and tables for Keystone to work. The command below will do that for us."
	echo "openstack-db --service keystone --init --password KEYSTONE_DBPASS"
	echo "It will ask us for root password to create the keystone use and the database."
	openstack-db --service keystone --init --password KEYSTONE_DBPASS
	echo "_________03.3"
} 
part04_certsKeys () { 
	echo "_________04.1"
	echo "Creating the signing keys and certificates for the tokens with the following command"
	echo "keystone-manage pki_setup --keystone-user keystone --keystone-group keystone"
	keystone-manage pki_setup --keystone-user keystone --keystone-group keystone
	echo "_________04.2"
} 
part05_setOwner () { 
	echo "_________05.1"
	echo "Set the file owners, just in case something messed up befor starting the service.
	chown -R keystone:keystone /etc/keystone/* /var/log/keystone/keystone.log
	echo "_________05.2"
} 
part06_configKeystonerc () { 
	echo "_________06.1"
	echo "Setup the required environment variables."
	echo "This will save the effort of supplying all the information every time a Keystone command is executed."
	echo "Note that by default the Keystone admin port is 35357."
	echo "_________06.2"
	echo "Your - inernet IPv4 - is : $IP_inet_addr"
	echo "Your - broadcast IP - is : $IP_Bcast_addr"
	echo "Your - mask IP - is : $IP_Mask_addr"
	echo "Your - internet IPv6 - is : $IP_inet6_addr"
	echo "Your - local IP - is : $IP_local"
	echo "The - live IPs - on your network are : $fLive_IPs"
	echo "_________06.3"
	echo "See bellow example from above linked guide to see how to modify the following file when given the option."
	echo "export OS_SERVICE_TOKEN=ADMIN_TOKEN"
	echo "export OS_SERVICE_ENDPOINT=http://127.0.0.1:35357/v2.0"
	echo "export OS_USERNAME=admin"
	echo "export OS_PASSWORD=ADMIN_PASS"
	echo "export OS_TENANT_NAME=admin"
	echo "export OS_AUTH_URL=http://127.0.0.1:35357/v2.0"
	echo "_________06.4"
	echo "Opening : /etc/keystone/.keystonerc : for you to edit..."
	vim /etc/keystone/.keystonerc
	echo "starting : .keystonerc " now..."
	. /etc/keystone/.keystonerc
	echo "_________06.5"
} 
part07_configTenant () { 
	echo "_________07.1"
	echo "Creating the tenants, users and the Keystone service with endpoint."
	echo "Creating tenant"
	keystone tenant-create --name=admin --description="Admin Tenant"
	echo "_________07.2"
	echo "Creating admin user"
	keystone user-create --name=admin --pass=ADMIN_PASS --email=admin@example.com
	echo "_________07.3"
	echo "Creating and adding admin user to admin role"
	keystone role-create --name=admin
	keystone user-role-add --user=admin --tenant=admin --role=admin 
	echo "_________07.4"
	echo "Creating Keystone service and endpoint"
	keystone service-create --name=keystone --type=identity --description="Keystone Identity Service"
	echo "_________07.5"
	echo "Copy the id from the command above and use it in the command below"
	keystone endpoint-create --service-id=c3dbb8aa4b27492f9c4a663cce0961a3 --publicurl=http://127.0.0.1:5000/v2.0 --internalurl=http://127.0.0.1:5000/v2.0 --adminurl=http://127.0.0.1:35357/v2.0
	echo "_________07.6"
} 
part08_testKeystone () { 
	echo "_________08.1"
	echo "Testing the keystone service..."
	unset OS_SERVICE_TOKEN OS_SERVICE_ENDPOINT
	keystone --os-username=admin --os-password=ADMIN_PASS --os-auth-url=http://127.0.0.1:35357/v2.0 token-get
	echo "_________08.2"
	echo "A token with id, validity and other information will be returned. Keystone is up and running."
	echo "_________08.3"
} 





# script start

# for part five
# service openstack-keystone start
# chkconfig openstack-keystone on

echo "End of script. Exiting now..."
exit
# script end

# notes and credits
# used PDF from following location
# http://docs.openstack.org/havana/install-guide/install/apt-debian/content/
# http://blog.adityapatawari.com/2014/01/openstack-101-how-to-setup-openstack.html
# Save file with vim
# http://www.cyberciti.biz/faq/save-file-in-vi-vim-linux-apple-macos-unix-bsd/

# notes

# package list
step 1
# yum install openstack-utils openstack-keystone mysql-server

