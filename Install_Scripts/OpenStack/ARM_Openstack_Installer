#!/bin/bash
PATH=/bin:/usr/bin:/usr/local/bin ; export PATH 
umask 022 		# Files that the script creates will have 755 permission.
# Thanks to Ian D. Allen, for this tip.

echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
# variables auto
 : ${USER?} ${HOME?} 
# find the name of this script and store it to a variable
osCN_fullScriptPath="$(readlink -f $0)"
# deleat last componit from ThisScript and store to another variable
osCN_ScriptDirectory="$(dirname $osCN_fullScriptPath)"


IP_inet_addr=`/sbin/ifconfig | grep -E 'inet addr' | grep -v '127.0.0.1' | awk '{gsub("addr:",""); print $2}'`
IP_Bcast_addr=`/sbin/ifconfig | grep -E 'Bcast' | grep -v '127.0.0.1' | awk '{gsub("Bcast:",""); print $3}'`
IP_Mask_addr=`/sbin/ifconfig | grep -E 'Mask' | grep -v '127.0.0.1' | awk '{gsub("Mask:",""); print $4}'`
IP_inet6_addr=`/sbin/ifconfig | grep -E 'inet6 addr' | grep -v '127.0.0.1' | grep -v '1/128' | awk '{gsub("addr:",""); print $2}'`
IP_local=`/sbin/ifconfig | grep -E 'inet addr' | grep -E '127.0.0.1' | awk '{gsub("addr:",""); print $2}'`
trimIP=`$IP_Bcast_addr | sed 's/...$//'`


trimRoute=`route -n | grep -E 'UG' | awk '{print $2}'`
IPmin=1
IPmax=254
customPinger=`for ip in $(seq $IPmin $IPmax) ;do (ping -c 1 -w 5 $trimIP$ip >/dev/null && echo "$trimIP$ip" &) ; done`
fLive_IPs=`$customPinger | grep -v '$trimRoute' | grep -v '$IP_inet_addr'`

echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"

part00_readme () { 
	echo "This script was made posible by the following links:"
	echo "https://github.com/reusserl/OpenStack-Install-Guide/blob/master/OpenStack_Havana_Debian_Wheezy_Install_Guide.rst"
	
	echo "This script will atempt to make the process of installing and configuring Openstack an easier one."
	
} 

part01_prepareDebian () { 
	echo "Adding Havana repositories."
	echo "deb http://havana.pkgs.enovance.com/debian havana main
	deb http://archive.gplhost.com/debian havana-backports main" > /etc/apt/sources.list.d/openstack.list
	echo "adding gplhost key"
	apt-get install -y gplhost-archive-keyring
	echo "adding enovance key"
	wget -qO - http://havana.pkgs.enovance.com/debian/dists/havana/pubkey.gpg | apt-key add -
	apt-key list
	echo "Updating and upgrading your system"
	apt-get update && apt-get dist-upgrade -y
	echo "Prompting for user input for : DNS Resolution : an example is presented bellow."
	echo "_________"
	echo "domain yourdomain.ch"
	echo "nameserver 8.8.8.8"
	echo "nameserver 8.8.4.4"
	echo "_________"
	echo -n "Please input : yourdomain : for : /etc/resolv.conf"
	read ui_domain
	echo -n "Please input a : nameserver : for : /etc/resolv.conf"
	read ui_nameserver
	echo -n "Please input the first : IP : for : /etc/resolv.conf"
	read ui_nameserverIP1
	echo -n "Please input the second : IP : for : /etc/resolv.conf"
	read ui_nameserverIP2
	echo 'domain $ui_domain.ch
	$ui_nameserver $ui_nameserverIP1
	$ui_nameserver $ui_nameserverIP2' > /etc/resolv.conf
	echo "Appending : /root/.bashrc : with the following:"
	echo '
	HISTSIZE=1000000
	HISTFILESIZE=9999999
	HISTTIMEFORMAT=(%d.%m.%Y) %H:%M
	export HISTSIZE HISTFILESIZE HISTTIMEFORMAT' >> /root/.bashrc
	echo "Removing Exim and installing Postfix"
	apt-get install postfix -y
	dpkg --purge exim4 exim4-base exim4-config exim4-daemon-light
	echo "Activaing mail forwarding"
	echo -n "Please enter your full email address"
	read ui_email
	echo "root: $ui_email.ch" >>/etc/aliases
	newaliases
	/etc/init.d/postfix reload
	echo "Removing unneeded software"
	dpkg --purge nfs-common rpcbind
	echo "Installing some useful tools"
	apt-get install ethtool tcpdump
	echo "Activating VLANâ€™s"
	apt-get install vlan
	echo "
	# vlan's
	8021q
	" >> /etc/modules
	modprobe 8021q
	echo "Enabling injection"
	echo "	To enable key-file, network & metadata injection into instances images."
	echo "nbd max_part=65" >> /etc/modules
	modprobe nbd max_part=65
	echo "Installing ntp service"
	apt-get install -y ntp
	echo "	Checking if ntp is working"
	ntpq -pn
} 
part02_networking () { 
	echo "Only one NIC should be reachable from the internet."
	echo "This is where the customers will access the webinterface horizon.
	echo "In the guide is used eth1. But it could also be a bond interface (bond0) or a vlan (vla100) or both bond0.100."
	echo "For my usage I'll be looking to wifi , bluetooth , and USB connection options."
	echo "So edit /etc/network/interfaces with some help from the bellow example..."
	echo "__________"
	echo "Not public available (used for OpenStack management and iscsi)"
	echo "__________"
	echo "	auto eth0"
	echo "	iface eth0 inet static"
	echo "	address 10.10.10.51"
	echo "	netmask 255.255.255.0"
	echo "__________"
	echo "For Exposing OpenStack API over the internet If you want to use your controller node as network node as well, you have to add an interface for your floating (public) ip addresses. If your floating ip addresses are on the same subnet as your OpenStack API (Horizon), you could use this interface."
	echo "__________"
	echo "	auto eth1"
	echo "	iface eth1 inet static"
	echo "	address 192.168.100.51"
	echo "	netmask 255.255.255.0"
	echo "	gateway 192.168.100.1"
	echo "	dns-nameservers 8.8.8.8"
	echo "__________"
	vim /etc/network/interfaces
	echo "Restarting the networking service"
	nohup sh -c "/etc/init.d/networking stop; sleep 2; /etc/init.d/networking start"
} 






# credits and notes
# pdf for comupte node install instuctions for debian
http://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=19&ved=0CGoQFjAIOAo&url=ftp%3A%2F%2Fftp.pku.edu.cn%2Fopen%2Fcloud%2FOpenStack%2Fdoc%2Fbk-compute-adminguide-folsom.pdf&ei=tXE7U97HCeqGyAGAwoH4BQ&usg=AFQjCNEZJ19zrHUfb4c31Pj0vl_fFQyShQ&sig2=RJI9KRwdvhVGbE0GiDPydQ&bvm=bv.63934634,d.aWc

