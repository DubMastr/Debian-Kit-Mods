#!/bin/bash
echo "setting variables"
# find the name of this script and store it to a variable
NF_fullScriptPath="$(readlink -f $0)"
# deleat last componit from ThisScript and store to another variable
NF_scriptDirectory="$(dirname $NF_fullScriptPath)"
 : ${USER?} ${HOME?} 
# set directory variables
NF_Path=$HOME/NoFlo
njs_Path=$HOME/nodejs
NF_Componit_Path=$NF_scriptDirectory/Components/NoFlo
NF_nameScript=ARM_NoFlo_Installer
echo "end of variable assignments"
echo "___________________"
echo "$NF_nameScript will install node.js and NoFlo"
echo "to your ARM Linux OS"
{
# confirm with the user
read -r -p "Are you sure? [Y/n]" response
case "$response" in
  [yY][eE][sS]|[yY])
 # if yes, then start risking changes
		;;
	*)
 #		 Otherwise exit..
	echo "Good Night" exit
	exit 
	;;
esac
}
echo "___________________"
# make some directories for this scripts componits and for programs to be installed to
echo "___________________"
echo "Making directories"
mkdir -p $NF_Componit_Path
mkdir -p $njs_Path
mkdir -p $NF_Path
echo "___________________"
echo "writing Nodejs_Installer to $NF_Componit_Path"
sudo cat > $NF_Componit_Path/Nodejs_Installer <<EOF
echo "using apt-get to install node.js requires sid list to be temperaraly added"
echo "deb ftp://ftp.dk.debian.org/debian/ sid main" | sudo tee /etc/apt/sources.list.d/sid.list
echo "__________________"
# from Crunchbang
echo "updating keys"
sudo apt-get update 2> /tmp/keymissing; for key in \$(grep "NO_PUBKEY" /tmp/keymissing |sed "s/.*NO_PUBKEY //"); do echo -e "nProcessing key: \$key"; gpg --keyserver keys.gnupgp.net --recv \$key && gpg --export --armor \$key | sudo apt-key add -; done
echo "__________________"
echo "installing node.js"
echo "note though that lib6-dev may cause services to re-start though upon installation"
echo "__________________" && sleep 10
sudo apt-get install libc6-dev
# sudo apt-get install python-pkg-resorces
sudo apt-get install -y nodejs
sudo apt-get install -y npm
echo "__________________"
echo "removing sid.list from the etc/apt/sources.list.d directory"
sudo rm -rI /etc/apt/sources.list.d/sid.list
EOF
echo "___________________"
echo "writing NoFlow_Installer to $NF_Componit_Path"
sudo cat > $NF_Componit_Path/NoFlow_Installer <<EOF
echo "using npm to install NoFlo to $NF_Path"
cd $NF_Path
npm install -g noflo
cd ~
EOF
echo "___________________"
echo "writing Permission_Fixer to $NF_Componit_Path"
sudo cat > $NF_Componit_Path/Permission_Fixer <<EOF
sudo chmod +x $NF_Componit_Path/Nodejs_Installer
sudo chmod +x $NF_Componit_Path/NoFlow_Installer
sudo chmod +x $NF_Componit_Path/Script_Runner
EOF
echo "___________________"
echo "writing Script_Runner to $NF_Componit_Path"
sudo cat > $NF_Componit_Path/Script_Runner <<EOF
echo "___________________"
echo "running Permission_Fixer on Nodejs_Installer, NoFlow_Installer, and Script_Runner"
sh $NF_Componit_Path/Permission_Fixer
echo "___________________"
echo "running Nodejs_Installer which will download, extract, and modify your bashrc file to include node.js"
sh $NF_Componit_Path/Nodejs_Installer
{
# confirm with the user
echo "___________________"
echo "about to install NoFlo, you may say n or no if happy with just node.js on your system"
echo "___________________"
read -r -p "Are you sure? [Y/n]" response
case "$response" in
  [yY][eE][sS]|[yY])
# if yes, then start risking changes
sh $NF_Componit_Path/NoFlow_Installer
		;;
	*)
 #		 Otherwise exit..
	echo "Good Night" exit
	exit 
	;;
esac
}
EOF
# give Permission_Fixer exicutable permissions
sudo chmod +x $NF_Componit_Path/Permission_Fixer
# request permission to continue
{
# confirm with the user
echo "___________________"
echo "writing out of this scripts moduals compleat and about to automaticly install node.js"
echo "___________________"
read -r -p "Are you sure? [Y/n]" response
case "$response" in
  [yY][eE][sS]|[yY])
# if yes, then start risking changes
sh $NF_Componit_Path/Script_Runner
		;;
	*)
 #		 Otherwise exit..
	echo "Good Night" exit
	exit 
	;;
esac
}
# end of script
