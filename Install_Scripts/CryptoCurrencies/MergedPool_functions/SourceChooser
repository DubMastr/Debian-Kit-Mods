
prompt_sourceChooser () { 
	echo "	Input - p2pool1 - to install from : github.com/forrestv/p2pool.git"
	echo "Which will set up a mured mining pool for Bitcoin and compatible block chains"
	echo "	Input -  - to install from : "
	echo "	Input -  - to install from : "
	echo -n "Please choose now :-: "
	read ui_sourcePool_choise
	if
	elif [ $ui_sourcePool_choise = p2pool1 ]
	then
		poolChoice="p2pool1"
		poolSource="git://github.com/forrestv/p2pool.git"
		poolSource_coin1="https://github.com/coblee/litecoin.git"
		poolSource_coin2="git://github.com/namecoin/namecoin.git"
		poolSource_coin3="git://github.com/knotwork/old-devcoind.git"
		poolSource_coin4="git://github.com/ixcoin/ixcoin.git"
		# poolSource_coin5="git://github.com/doublec/i0coin"
		poolDir="p2pool"
		coinDir1="/.bitcoin/"
		echo "$poolChoice"
	elif [ $ui_sourcePool_choise = ]
	then
		
	elif [ $ui_sourcePool_choise = ]
	then
		
	else
	echo "Invalid input recived, exiting now..."
	echo exit
	fi
	
}

sourceChooser_dependsInstaller () { 
	if 
	elif [ $poolChoice = p2pool1 ] 
	then
		echo "Installing python-software-properties with : "
		$ui_aptgetSudo -yq --force-yes install python-software-properties
		$ui_aptReppo_add ppa:bitcoin/bitcoin
		$ui_aptgetSudo update
		echo "Installing : bitcoind and bitcoin-qt : for bitcoin"
		$ui_aptgetSudo -yq --force-yes install bitcoind
		# optinal package for gui
		$ui_aptgetSudo -yq --force-yes install bitcoin-qt
		
		# for litecoin
		$ui_aptgetSudo build-dep bitcoin
		$ui_aptgetSudo -yq --force-yes install build-essential libglib2.0-dev libglibmm-2.4-dev libqt4-dev python-dev libcurl4-gnutls-dev
		
		# for p2pool1 software dependancies
		$ui_aptgetSudo -yq --force-yes install python-rrdtool python-pygame python-scipy python-twisted python-twisted-web python-imaging
		
		
	elif [  ]
	then
		
	elif [  ]
	then 
		
	else
	echo "Invalid input recived, exiting now..."
	echo exit
	fi
	
} 

config_Coin_sources () { 
	if 
	elif [ $poolChoice = p2pool1 ] 
	then
		
		echo "	Input a user name and supper secrit password for Litcoin mining services"
		echo -n "Set Litecoin user name :-: "
		read ui_poolHost_userLitecoin
		echo -n "Set Litecooin password :-: "
		read ui_poolHost_passwordLitecoin
		
		echo "	Input a user name and password for Namecoin"
		echo -n "Set Namecoin user name :-: "
		read ui_poolHost_userNamecoin
		echo -n "Set Namecoin password :-: "
		read ui_poolHost_passwordNamecoin
		
		echo "	Input a user name and password for Devcoin"
		echo -n "Set Devcoin user name :-: "
		read ui_poolHost_userDevcoin
		echo -n "Set Devcoin password :-: "
		read ui_poolHost_passwordDevcoin
		
		echo "	Input a user name and password for IXCoin"
		echo -n "Set user name for IXCoin :-: "
		read ui_poolHost_userIXCoin
		echo -n "Set password for IXCoin :-: "
		read ui_poolHost_passwordIXCoin
		
		echo "	Input a user name and password for IOCion"
		echo -n "Set user name for IOCoin :-: "
		read ui_poolHost_userIOCoin
		echo -n "Set password for IOCoin :-: "
		read ui_poolHost_passwordIOCoin
		
	elif [  ]
	then
		
	elif [  ]
	then 
		
	else
	echo "Invalid input recived, exiting now..."
	echo exit
	fi
	
	# --give-author $ui_poolHost_fee $ui_poolHost_user $ui_poolHost_password
} 

pool_sourceChooser_gitCloner () { 
	cd $ui_Download_Directory
	if 
	elif [ $poolChoice = p2pool1 ] 
	then
		$ui_git clone $poolSource
		$ui_git clone $poolSource_coin1
		$ui_git clone $poolSource_coin2
		$ui_git clone $poolSource_coin3
		$ui_git clone $poolSource_coin4
	elif [  ]
	then
		
	elif [  ]
	then 
		
	else
	echo "Invalid input recived, exiting now..."
	echo exit
	fi
	
} 

pool_sourceChooser_gitInstaller () {
	if 
	elif [ $poolChoice = p2pool1 ] 
	then
		echo "Building Litecoin"
		cd ~/litecoin/src/
		make -f makefile.unix litecoind
		mkdir ~/.litecoin/
		cd ~
		cd ~/p2pool/litecoin_scrypt
		sudo python setup.py install
		cd ~
		echo "Building Namecoin"
		cd ~/namecoin/src/
		make -f makefile.unix namecoind
		mkdir ~/.namecoin/
		cd ~
		echo "Building Devcoin"
		cd ~/old-devcoind/src/
		make -f makefile.unix bitcoind
		mkdir ~/.devcoin/
		cd ~
		echo "Building IXCoin"
		cd ~/ixcoin/src/
		make -f makefile.unix ixcoind
		mkdir ~/.ixcoin/
		cd ~
		echo "Building IOCoin"
		cd ~/i0coin/src/
		make -f makefile.unix i0coind
		mkdir ~/.i0coin/
		cd ~
		
	elif [  ]
	then
		
	elif [  ]
	then 
		
	else
	echo "Invalid input recived, exiting now..."
	echo exit
	fi
} 

sourceChooser_confConfigurer () { 
	if 
	elif [ $poolChoice = p2pool1 ] 
	then
		echo 'server=1
		daemon=1
		rpcuser=$ui_poolHost_user
		rpcpassword=$ui_poolHost_password' | $ui_teeFile -a ~/$coinDir1/bitcoin.conf
		
		echo 'server=1
		daemon=1
		rpcuser=$ui_poolHost_userLitecoin
		rpcpassword=$ui_poolHost_passwordLitecoin
		rpcport=9334
		port=9335
		gen=0' | $ui_teeFile -a ~/.litecoin/litecoin.conf
		
		echo 'server=1
		daemon=1
		rpcuser=$ui_poolHost_userNamecoin
		rpcpassword=$ui_poolHost_passwordNamecoin
		rpcport=7333' | $ui_teeFile -a ~/.namecoin/bitcoin.conf
		
		echo 'server=1
		daemon=1
		rpcuser=$ui_poolHost_userDevcoin
		rpcpassword=$ui_poolHost_passwordDevcoin
		rpcport=6333
		port=6334' | $ui_teeFile -a ~/.devcoin/devcoin.conf
		
		echo 'server=1
		daemon=1
		rpcuser=$ui_poolHost_userIXCoin
		rpcpassword=$ui_poolHost_passwordIXCoin' | $ui_teeFile -a ~/.ixcoin/ixcoin.conf
		
		echo 'server=1
		daemon=1
		rpcuser=$ui_poolHost_userIOCoin
		rpcpassword=$ui_poolHost_passwordIOCoin
		port=7337
		rpcport=7338' | $ui_teeFile -a ~/.i0coin/i0coin.conf
		
	elif [  ]
	then
		
	elif [  ]
	then 
		
	else
	echo "Invalid input recived, exiting now..."
	echo exit
	fi
	
} 

helpfullExamples_poolCommands () { 
	if 
	elif [ $poolChoice = p2pool1 ] 
	then
		echo "	Accessing your P2Pool statistics"
		echo "http://IP_P2POOL_SERVER:9332/graphs/"
		echo "	Blocks mined by P2Pool since you're in"
		echo "grep BLOCK ~/p2pool/data/bitcoin/log"
		echo "	Got shares"
		echo "grep GOT\ SHARE ~/p2pool/data/bitcoin/log"
		echo "	Upgrading P2Pool to a newer version"
		echo "cd ~/p2pool"
		echo "git pull"
		echo "	Point your miners to your new P2Pool"
		echo "cgminer -o http://IP_P2POOL_SERVER:9332/ -u garimpeiro1 -p x -g 1 --auto-fan --auto-gpu --gpu-engine 600-900 --gpu-memclock 180 -I 8 --submit-stale --gpu-reorder --api-listen --api-network"
		echo "	Help command for Litecoin"
		echo "~/litecoin/src/litecoind help"
		echo "	Help command for Namecoin"
		echo "~/namecoin/src/namecoind help"
		echo "	Help command for Devcoin"
		echo "~/old-devcoind/src/bitcoind help"
		echo "	Help command for IXCoin"
		echo "~/ixcoin/src/ixcoind help"
		echo "help commands IOCoin"
		echo "~/i0coin/src/i0coind help"
		
	elif [  ]
	then
		
	elif [  ]
	then 
		
	else
	echo "Invalid input recived, exiting now..."
	echo exit
	fi
	
} 

